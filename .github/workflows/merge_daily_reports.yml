name: Merge Daily Reports

on:
  workflow_dispatch:
    inputs:
      target_month:
        description: '対象の月 (now: 今月, last: 先月)'
        required: true
        default: 'last'

jobs:
  merge:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: リポジトリをチェックアウト（全ファイル取得）
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0

      - name: 実行対象の年月を決定
        run: |
          if [ "${{ github.event.inputs.target_month }}" == "now" ]; then
            YEAR=$(date +'%Y')
            MONTH=$(date +'%m')
          else
            YEAR=$(date --date="last month" +'%Y')
            MONTH=$(date --date="last month" +'%m')
          fi

          echo "YEAR=$YEAR" >> $GITHUB_ENV
          echo "MONTH=$MONTH" >> $GITHUB_ENV

      - name: 各 Markdown ファイルに最新のコミットメッセージを追加
        run: |
          REPORT_DIR="$YEAR/$MONTH"

          if [ ! -d "$REPORT_DIR" ]; then
            echo "Directory $REPORT_DIR does not exist. Skipping merge."
            exit 0
          fi

          for file in $(ls "$REPORT_DIR"/*.md); do
            COMMIT_MSG=$(git log -1 --pretty=%B -- "$file")
            TMP_FILE=$(mktemp)

            # `LAST_COMMIT_MSG` をファイルの先頭に追加
            echo -e "# Last Commit Message:\n${COMMIT_MSG}\n\n$(cat "$file")" > "$TMP_FILE"
            mv "$TMP_FILE" "$file"
          done

      - name: Markdown ファイルを結合
        run: |
          REPORT_DIR="$YEAR/$MONTH"
          OUTPUT_FILE="${YEAR}-${MONTH}-merged.md"

          echo "Looking for files in: $REPORT_DIR"

          if [ ! -d "$REPORT_DIR" ]; then
            echo "Directory $REPORT_DIR does not exist. Skipping merge."
            exit 0
          fi

          # すべての Markdown を結合
          cat $(ls "$REPORT_DIR"/*.md | sort) > "$OUTPUT_FILE"

      - name: 変更をコミット & プッシュ
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

          if git status --porcelain | grep -q '^\s*M'; then
            git add "$YEAR/$MONTH"/*.md
            git commit -m "${YEAR}年${MONTH}月の日報に最新のコミットメッセージを追加"
            git push origin main
          else
            echo "No changes detected. Skipping commit & push."
          fi
