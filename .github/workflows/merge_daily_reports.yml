name: Merge Daily Reports

on:
  workflow_dispatch:
    inputs:
      target_month:
        description: '対象の月 (now: 今月, last: 先月)'
        required: true
        default: 'last'

jobs:
  merge:
    runs-on: ubuntu-latest

    steps:
      - name: リポジトリをチェックアウト（全ファイル取得）
        uses: actions/checkout@v4
        with:
          ref: main
          fetch-depth: 0
          # リポジトリ全体を取得するため、sparse-checkout の設定は不要です。
          # ※ もし特定のディレクトリだけを取得したい場合は、下記のように設定してください：
          # sparse-checkout: |
          #   2025/
          # sparse-checkout-cone-mode: false

      - name: 実行対象の年月を決定
        run: |
          if [ "${{ github.event.inputs.target_month }}" == "now" ]; then
            YEAR=$(date +'%Y')
            MONTH=$(date +'%m')
          else
            YEAR=$(date --date="last month" +'%Y')
            MONTH=$(date --date="last month" +'%m')
          fi
          echo "YEAR=$YEAR" >> $GITHUB_ENV
          echo "MONTH=$MONTH" >> $GITHUB_ENV

      - name: デバッグ用にディレクトリの中身を確認
        run: |
          echo "Repository root structure:"
          ls -la
          echo "Checking target directory $YEAR/$MONTH ..."
          ls -la "$YEAR/$MONTH" || echo "Directory $YEAR/$MONTH not found"

      - name: Markdownファイルを結合
        run: |
          REPORT_DIR="$YEAR/$MONTH"
          OUTPUT_FILE="${YEAR}-${MONTH}-merged.md"
          echo "Looking for files in: $REPORT_DIR"
          
          if [ ! -d "$REPORT_DIR" ]; then
            echo "Directory $REPORT_DIR does not exist. Skipping merge."
            exit 0
          fi
          
          if ls "$REPORT_DIR"/*.md 1> /dev/null 2>&1; then
            cat $(ls "$REPORT_DIR"/*.md | sort) > "$OUTPUT_FILE"
          else
            echo "No Markdown files found in $REPORT_DIR. Skipping merge."
            exit 0
          fi

      - name: 変更をコミット & プッシュ
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          MERGED_FILE="${YEAR}-${MONTH}-merged.md"
          if [ -f "$MERGED_FILE" ]; then
            git add "$MERGED_FILE"
            git commit -m "${YEAR}年${MONTH}月の日報を結合"
            git push
          else
            echo "Merged file $MERGED_FILE does not exist. Skipping commit & push."
            exit 0
          fi
